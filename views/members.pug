doctype html
html
  head
    title Members
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous")
    script.
      function updateURL(param, value) {
        const url = new URL(window.location.href);
        url.searchParams.set(param, value);
        if (param === 'boardId') {
          url.searchParams.delete('memberId'); // Reset memberId when changing board
        }
        window.location.href = url.toString();
      }
      // Refresh the page every 15 seconds
      setInterval(function() {
        window.location.reload();
      }, 15000);
  body
    .container
      h1.mb-4 Board Members
      select(name="boardId" onchange="updateURL('boardId', this.value)")
        option(value=defaultBoardId selected=(currentBoardId === defaultBoardId)) Performance Tracker Board
        option(value=boardId1 selected=(currentBoardId === boardId1)) Miami EdTech 2024-2025 Tracker
        option(value=boardId2 selected=(currentBoardId === boardId2)) GoSprout Sprint Board
      select(name="memberId" onchange="updateURL('memberId', this.value)")
        option(value="") -- Select a Member --
        each member in allMembers
          option(value=member.id selected=(selectedMemberId === member.id))= member.username + ' (' + member.fullName + ')'
      if members && members.length > 0
        each member in members
          div
            h2= member.username + ' (' + member.fullName + ')'
            if member.cards.length > 0
              each card in member.cards
                div.card.mb-3
                  div.card-body
                    h5.card-title= card.cardName
                    p List Name: #{card.listName}
                    p Card Complexity: #{card.complexity}
                    p Date of last activity: #{card.activityDate}
                    p Due Date: #{card.dueDate}
                    - const now = new Date();
                    - const activityDate = card.activityDate ? new Date(card.activityDate) : null;
                    - const hoursOnList = activityDate ? Math.abs(now - activityDate) / 36e5 : 'N/A';
                    p Hours Since Last Active: #{hoursOnList.toFixed ? hoursOnList.toFixed(2) : 'N/A'}
                    p Hours spent on previous list: #{card.hoursOnList}
            else
              p No cards found for this member
      else
        p No Trello users or cards found
