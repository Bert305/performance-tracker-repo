doctype html
html
    head
        title Dashboard
        link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous")
    body
        .container
            h1.mb-4 User Dashboard
            - users.sort((a, b) => ((b.doneTickets * (b.tasks.filter(task => task.status === 'done').reduce((sum, task) => sum + task.complexity, 0) / b.doneTickets)) / b.totalSprintTickets * 100) - ((a.doneTickets * (a.tasks.filter(task => task.status === 'done').reduce((sum, task) => sum + task.complexity, 0) / a.doneTickets)) / a.totalSprintTickets * 100))
            each user in users
                div.d-flex.align-items-center.my-4
                    img(src=user.image, alt='User Image', width='30', height='30', class='rounded-circle ms-2')
                    div.progress.flex-grow-1.ms-3
                        div.progress-bar(style=`width: ${user.doneTickets / user.totalSprintTickets * 100}%`, role="progressbar", aria-valuenow=`${user.doneTickets / user.totalSprintTickets * 100}`, aria-valuemin="0", aria-valuemax="100")
            table.table.mt-4
                thead
                    tr
                        th(scope="col") Rank
                        th(scope="col") Teammates
                        th(scope="col") Number of tickets
                        th(scope="col") In progress tickets
                        th(scope="col") Done tickets
                        th(scope="col") Score
                        th(scope="col") Team
                tbody
                    if typeof users !== 'undefined' && users.length
                        each user, index in users
                            tr
                                th(scope="row")= index + 1
                                td
                                    img(src=user.image, alt='User Image', width='50', height='50', class='rounded-circle me-2')
                                    | #{user.firstName} #{user.lastName}
                                td= user.totalSprintTickets
                                td= user.inProgressTickets
                                td= user.doneTickets
                                td= (user.doneTickets * (user.tasks.filter(task => task.status === 'done').reduce((sum, task) => sum + task.complexity, 0) / user.doneTickets)) / user.totalSprintTickets * 100
                                td= user.teamName ? user.teamName : 'No team'
                    else
                        tr
                            td(colspan="7") No users found

        script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous")





//- Make rank based on high score 
//- Make the graph above the table to calculate the number of tickets done versus the total number of tickets like on figma